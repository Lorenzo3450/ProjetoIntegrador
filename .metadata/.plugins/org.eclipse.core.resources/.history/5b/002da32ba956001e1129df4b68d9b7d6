package controller;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import controller.gerente.TabelaFuncionario_FiltroController;
import controller.gerente.TabelaFuncionarioController.Delta;
import model.dao.ConexãoBD;
import model.dao.login.MainModel;
import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.geometry.Rectangle2D;
import javafx.stage.Modality;
import javafx.stage.Screen;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.BorderPane;

public class Main extends Application {

	private static Stage primaryStage;
	// tela de login e de carregamento e tela de recuperar a senha
	private static Scene login;
	private static Scene loading;
	private static Scene RecuperaSenha;

	// telas de cadastro
	private static Scene cadastro;
	private static Scene cadastro2;
	
	// telas gerente
	private static Scene MenuPrincipalGerente;
	private static Scene TabelaFuncionarios;
	private static Scene RelatorioABC;
	private static Scene GraficoDeLucrosDosMeses;
	private static Scene GraficoDeLucrosDasSecoesProduto;
	
	
	//telas RH
	private static Scene MenuPrincipalRH;
	

	@Override
	public void start(Stage primaryStage) throws Exception {

		this.primaryStage = primaryStage;
		this.primaryStage.setTitle("SuperSminding");

		initMainStage();

	}

	private void initMainStage() throws Exception {

		// todas as cenas do projeto

		// cenas do pacote login
		Parent fxmlLoguin = FXMLLoader.load(getClass().getResource("/view/login/TelaDeLogin.fxml"));
		login = new Scene(fxmlLoguin);

		Parent fxmlLoading = FXMLLoader.load(getClass().getResource("/view/login/TelaDeLoading.fxml"));
		loading = new Scene(fxmlLoading);

		Parent fxmlRecuperaSenha = FXMLLoader.load(getClass().getResource("/view/login/TelaRecuperaSenha.fxml"));
		RecuperaSenha = new Scene(fxmlRecuperaSenha);

		Parent fxmlCadastro = FXMLLoader.load(getClass().getResource("/view/login/TelaDeCadastro.fxml"));
		cadastro = new Scene(fxmlCadastro);

		Parent fxmlCadastro2 = FXMLLoader.load(getClass().getResource("/view/login/TelaDeCadastro2.fxml"));
		cadastro2 = new Scene(fxmlCadastro2);

		// cenas do pacote gerente

		Parent fxmlMenuPrincipalGerente = FXMLLoader
				.load(getClass().getResource("/view/gerente/TelaPrincipalGerente.fxml"));
		MenuPrincipalGerente = new Scene(fxmlMenuPrincipalGerente);

		
		
		
		Parent fxmlTabelaFuncionarios = FXMLLoader.load(getClass().getResource("/view/gerente/TabelaFuncionario.fxml"));
		TabelaFuncionarios = new Scene(fxmlTabelaFuncionarios);
		

		Parent fxmlRelatorioABC = FXMLLoader.load(getClass().getResource("/view/gerente/RelatorioABC.fxml"));
		RelatorioABC = new Scene(fxmlRelatorioABC);

		Parent fxmlGraficoDeLucrosDosMeses = FXMLLoader.load(getClass().getResource("/view/gerente/GraficoDeLucroDosMeses.fxml"));
		GraficoDeLucrosDosMeses = new Scene(fxmlGraficoDeLucrosDosMeses);
		
		Parent fxmlGraficoDeLucrosDasSecoesProduto = FXMLLoader.load(getClass().getResource("/view/gerente/GraficoLucroSecoes.fxml"));
		GraficoDeLucrosDasSecoesProduto = new Scene(fxmlGraficoDeLucrosDasSecoesProduto);
		
		//cenas do pacote RH
		
		Parent fxmlMenuPrincipalRH = FXMLLoader
				.load(getClass().getResource("/view/RH/TelaPrincipalRH.fxml"));
		MenuPrincipalRH = new Scene(fxmlMenuPrincipalRH);
		
		
	
		
		


		// inicializa as cenas

		// verifica a sessão do usuario para vê se ele já realizou login

		if (MainModel.VerificaSessao()) {

			// verifica o cargo do usuario

			String cargo = MainModel.verificaCargo();

			if (cargo.equalsIgnoreCase("gerente")) {

				
				this.primaryStage.setScene(MenuPrincipalGerente);
				this.primaryStage.show();
				
				
				
			}
			if(cargo.equalsIgnoreCase("RH")) {
				
				this.primaryStage.setScene(MenuPrincipalRH);
				this.primaryStage.show();
				
			}
			
			if(cargo.equalsIgnoreCase("Não definido")) {
			
				try {

					   FXMLLoader loader = new FXMLLoader(getClass().getResource("/view/login/FuncionarioNaoDefinido.fxml"));
				        Parent root = loader.load();
				      
				        // Configuração do novo Stage
				        Stage newStage = new Stage();
				        newStage.initStyle(StageStyle.UNDECORATED); // Remove a barra de título
				        newStage.setTitle("");
				        newStage.initModality(Modality.APPLICATION_MODAL);
				        newStage.setScene(new Scene(root));

				        // Torna a janela arrastável (draggable)
				        makeStageDraggable(newStage, root);

				        // Exibe a nova cena em um novo Stage
				        newStage.showAndWait();

				    } catch (Exception e) {
				        e.printStackTrace();
				    }
				
				
			}

		} else {
			this.primaryStage.setScene(login);
			this.primaryStage.show();
		} 

	}
	
	
	//método para as outras classes alterarem as cenas do sistema

	public static void Cena(String a) throws Exception {
		
		//telas login
		if (a.equals("Login")) {

			primaryStage.setScene(login);

		}

		if (a.equals("RecuperaSenha")) {

			primaryStage.setScene(RecuperaSenha);

		}

		if (a.equals("loading")) {

			primaryStage.setScene(loading);

		}

		if (a.equals("Cadastro")) {

			primaryStage.setScene(cadastro);

		}

		if (a.equals("Cadastro2")) {

			primaryStage.setScene(cadastro2);

		}
		
		//telas gerente 

		if (a.equals("TabelaFuncionarios")) {

			primaryStage.setScene(TabelaFuncionarios);

		}

		if (a.equals("TelaPrincipalGerente")) {

			primaryStage.setScene(MenuPrincipalGerente);

		}
		
		if (a.equals("TelaRelatorioABC")) {

			primaryStage.setScene(RelatorioABC);

		}
		
		if (a.equals("GraficoMes")) {

			primaryStage.setScene(GraficoDeLucrosDosMeses);

		}
		
		if (a.equals("GraficoSecao")) {

			primaryStage.setScene(GraficoDeLucrosDasSecoesProduto);

		}
		

	}
	
	
	private void makeStageDraggable(Stage stage, Parent root) {
	    final Delta dragDelta = new Delta();

	    root.setOnMousePressed(event -> {
	        // Quando o mouse é pressionado, calcula a diferença entre a posição atual do mouse
	        // e a posição da janela
	        dragDelta.x = stage.getX() - event.getScreenX();
	        dragDelta.y = stage.getY() - event.getScreenY();
	    });

	    root.setOnMouseDragged(event -> {
	        // Quando o mouse é arrastado, move a janela para a nova posição
	        stage.setX(event.getScreenX() + dragDelta.x);
	        stage.setY(event.getScreenY() + dragDelta.y);
	    });
	}

	// Classe auxiliar para armazenar a diferença entre as coordenadas do mouse e da janela
	class Delta {
	    double x, y;
	}
	
	
	
	

	//metodo main
	
	public static void main(String[] args) {
		launch(args);
	}
	
	
	
}