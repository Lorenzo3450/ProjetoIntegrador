package model.dao.Gerente;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import controller.Ferramentas.DetalhesLucro;
import controller.Ferramentas.Produto;
import model.dao.ConexãoBD;

public class RelatorioABCDao {

	 // Método para obter uma lista de produtos
    public List<Produto> obterProdutos() {
        List<Produto> produtos = new ArrayList<>();
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        ResultSet resultSet = null;

        try {
            connection = ConexãoBD.Conexao(); 
            String sql = "SELECT descricao, validade, quantidade, valor_comprado_unidade, valor_vendido_unidade, marca_produto, codigo_produto FROM produtos";
            preparedStatement = connection.prepareStatement(sql);
            resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                String descricao = resultSet.getString("descricao");
                // Recupere outros campos do produto aqui...
                LocalDate validade = resultSet.getDate("validade").toLocalDate();
                int quantidade = resultSet.getInt("quantidade");
                double valorCompraUnidade = resultSet.getDouble("valor_comprado_unidade");
                double valorVendaUnidade = resultSet.getDouble("valor_vendido_unidade");
                String marca = resultSet.getString("marca_produto");
                String codigo = resultSet.getString("codigo_produto");

                // Crie um objeto Produto com os dados recuperados
                Produto produto = new Produto(descricao, validade, quantidade, valorCompraUnidade, valorVendaUnidade, marca, codigo);

                produtos.add(produto);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // Feche os recursos (ResultSet, PreparedStatement, Connection) aqui...
            if (resultSet != null) {
                try {
                    resultSet.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
            if (preparedStatement != null) {
                try {
                    preparedStatement.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }

        return produtos;
    }
	
	

}