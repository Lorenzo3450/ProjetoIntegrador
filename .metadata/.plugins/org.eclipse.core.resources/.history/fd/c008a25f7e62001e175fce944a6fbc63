package controller.Gestor;

import javafx.fxml.FXML;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.image.ImageView;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.MouseEvent;
import model.Produto;
import model.Gestor.TabelaProdutoDao;
import javafx.scene.control.cell.PropertyValueFactory;

import java.sql.SQLException;

import controller.Ferramentas.EditButtonCell;
import controller.Ferramentas.EditButtonCellProduto;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler; 
import javafx.scene.control.cell.PropertyValueFactory;

	public class TabelaProdutosController {

	    @FXML
	    private ImageView BtnFiltro;

	    @FXML
	    private ImageView BtnImprimir;

	    @FXML
	    private ImageView BtnPesquisar;

	    @FXML
	    private ImageView BtnRemoverFuncionario;

	    @FXML
	    private TableView<Produto> tableView;

	    @FXML
	    private TableColumn<Produto, String> columSessao;

	    @FXML
	    private TableColumn<Produto, String> EstoqueMinimo;

	    @FXML
	    private TableColumn<Produto, Integer> Quantidade;

	    @FXML
	    private TableColumn<Produto, Double> emailValidae;

	    @FXML
	    private TableColumn<Produto, Double> idadePrecoVendido;

	    @FXML
	    private TableColumn<Produto, String> imageColumn;

	    @FXML
	    private TableColumn<Produto, String> nomeDescrição;

	    @FXML
	    private TableColumn<Produto, String> PrecoComprado;

	    
	    
	    
	    @FXML
	    private void initialize() {
	        // Limpar os itens da tabela
	        tableView.getItems().clear();
	        
	        // Configurar as colunas da tabela
	        columSessao.setCellValueFactory(new PropertyValueFactory<>("descricao"));
	        EstoqueMinimo.setCellValueFactory(new PropertyValueFactory<>("EstoqueMinimo"));
	        Quantidade.setCellValueFactory(new PropertyValueFactory<>("quantidade"));
	        emailValidae.setCellValueFactory(new PropertyValueFactory<>("valorCompraUnidade"));
	        idadePrecoVendido.setCellValueFactory(new PropertyValueFactory<>("valorVendaUnidade"));
	        imageColumn.setCellValueFactory(new PropertyValueFactory<>("imageColumn")); 
	        nomeDescrição.setCellValueFactory(new PropertyValueFactory<>("nomeDescrição")); 
	        PrecoComprado.setCellValueFactory(new PropertyValueFactory<>("PrecoComprado")); 
	        
	        // Configurar a fábrica de células para a coluna de ação personalizada (se você tiver uma)
	        // Se você não tiver uma coluna de ação personalizada, pode omitir esta parte
	        imageColumn.setCellFactory(param -> {
	            EditButtonCellProduto cell = new EditButtonCellProduto();

	            // Configure a ação do botão personalizado para chamar o método Editar
	            cell.setEditarAction(event -> {
	                Produto produto = cell.getTableRow().getItem();
	                if (produto != null) {
	                    Editar(produto);
	                }
	            });

	            return cell;
	        });

	        // Carregar os produtos e adicionar à tabela
	        try {
	            ObservableList<Produto> produtos = FXCollections.observableArrayList(TabelaProdutoDao.inicializarTabela());
	            tableView.setItems(produtos);
	        } catch (SQLException e) {
	            e.printStackTrace();
	        }
	    }
	    
	    
	    
	    private void Editar(Produto produto) {
			// TODO Auto-generated method stub
			
		}



		@FXML
	    void EfeitoFiltro(MouseEvent event) {

	    }

	    @FXML
	    void EfeitoImprimir(MouseEvent event) {

	    }

	    @FXML
	    void EfeitoRemoverFuncionario(MouseEvent event) {

	    }

	    @FXML
	    void Filtro(MouseEvent event) {

	    }

	    @FXML
	    void Pesquisar(MouseEvent event) {

	    }

	    @FXML
	    void PressionarEnter(KeyEvent event) {

	    }

	    @FXML
	    void RemoverFuncionario(MouseEvent event) {

	    }

	    @FXML
	    void SairFiltro(MouseEvent event) {

	    }

	    @FXML
	    void SairImprimir(MouseEvent event) {

	    }

	    @FXML
	    void SairRemoverFuncionario(MouseEvent event) {

	    }

	    @FXML
	    void imprimir(MouseEvent event) {

	    }

	    @FXML
	    void vol1(MouseEvent event) {

	    }

	}

	
	

